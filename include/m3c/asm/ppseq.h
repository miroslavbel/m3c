#ifndef _M3C_INCGUARD_ASM_PPSEQ_H
#define _M3C_INCGUARD_ASM_PPSEQ_H

#include <m3c/asm/types.h>

#include <m3c/core/diagnostics.h>

/**
 * \brief Kind of \ref M3C_ASM_Rel "relocation".
 */
typedef enum __tagM3C_ASM_RelKind {
    /**
     * \brief Corresponds to \ref M3C_ASM_RelRoot "RelRoot" struct.
     */
    M3C_ASM_RelKind_ROOT,
    /**
     * \brief Corresponds to \ref M3C_ASM_RelInclude "RelInclude" struct.
     */
    M3C_ASM_RelKind_INCLUDE
} M3C_ASM_RelKind;

/**
 * \brief Represents tokens that have been included from some document.
 *
 * \details A document can be included as
 * + an **entry document** by passing entry document to compiler
 * + an **included document** (from entry document or any entry document) by using the `include`
 * directive
 */
typedef struct __tagM3C_ASM_RelInclude {
    /**
     * \brief Handle to included document.
     */
    M3C_ASM_hDocument hDoc;
} M3C_ASM_RelInclude;

/**
 * \brief Root of all relocations.
 */
typedef struct __tagM3C_ASM_RelRoot {
    /**
     * \brief Relocation by which the entry document has been included.
     */
    M3C_ASM_RelInclude *entry;
} M3C_ASM_RelRoot;

/**
 * \brief Union of all relocation data.
 */
typedef union __tagM3C_ASM_RelData {
    /**
     * \brief Corresponds to \ref M3C_ASM_RelRoot "RelRoot" struct.
     */
    M3C_ASM_RelRoot ROOT;
    /**
     * \brief Corresponds to \ref M3C_ASM_RelInclude "RelInclude" struct.
     */
    M3C_ASM_RelInclude INCLUDE;
} M3C_ASM_RelData;

typedef struct __tagM3C_ASM_Rel M3C_ASM_Rel;

/**
 * \brief Relocation.
 */
struct __tagM3C_ASM_Rel {
    /**
     * \brief Kind of the relocation.
     */
    M3C_ASM_RelKind kind;
    /**
     * \brief Index of the first token generated by this relocation in \ref M3C_ASM_PPSeq::toks
     * "PPSeq::toks".
     *
     * \warning If there are no tokens generated by this relocation it's the index of the first
     * token after this relocation (if there is any).
     */
    m3c_size_t start;
    /**
     * \brief Relocation data.
     */
    M3C_ASM_RelData data;
    /**
     * \brief Pointer to the parent relocation.
     *
     * \warning Must be always set to `NULL` for \ref M3C_ASM_RelRoot "RelRoot".
     */
    M3C_ASM_Rel *parent;
};

/**
 * \brief Preprocessor sequence.
 *
 * \details Sequence of tokens (and diagnostics) on which the preprocessor works (e.g., executes
 * directives and expands macros).
 */
typedef struct __tagM3C_ASM_PPSeq {
    /**
     * \brief Vector of \ref M3C_ASM_Token "tokens".
     */
    M3C_ASM_Tokens toks;
    /**
     * \brief Collection of \ref M3C_Diagnostic "diagnostics".
     */
    M3C_Diagnostics diags;
    /**
     * \brief Token relocations.
     *
     * \details Stores token relocations so that it is possible to understand where a particular
     * token came from, which can be useful when emitting diagnostics.
     */
    M3C_ASM_Rel rels;
} M3C_ASM_PPSeq;

/**
 * \brief Inits preprocessor sequence.
 *
 * \param[in,out] ppSeq preprocessor sequence
 */
void __M3C_ASM_PPSeq_Init(M3C_ASM_PPSeq *ppSeq);

/**
 * \brief Deinits preprocessor sequence.
 *
 * \param[in] ppSeq preprocessor sequence
 */
void __M3C_ASM_PPSeq_Deinit(M3C_ASM_PPSeq const *ppSeq);

#endif /* _M3C_INCGUARD_ASM_TOKSEQ_H */
